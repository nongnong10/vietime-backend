basePath: /
definitions:
  dto.CreateCardRequest:
    properties:
      answer:
        type: string
      deck_id:
        type: string
      index:
        type: integer
      question:
        type: string
      question_img_label:
        type: string
      question_img_url:
        type: string
      wrong_answers:
        items:
          type: string
        type: array
    required:
    - answer
    - deck_id
    - question
    - wrong_answers
    type: object
  dto.CreateCardResponse:
    properties:
      card:
        $ref: '#/definitions/entity.Card'
    type: object
  dto.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dto.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  dto.SignupResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  entity.Card:
    properties:
      answer:
        type: string
      card_type:
        type: string
      created_at:
        type: string
      deck_id:
        type: string
      id:
        type: string
      index:
        type: integer
      last_review:
        type: string
      next_review:
        type: string
      num_reviews:
        type: integer
      question:
        type: string
      question_img_label:
        type: string
      question_img_url:
        type: string
      user_id:
        type: string
      wrong_answers:
        items:
          type: string
        type: array
    type: object
info:
  contact:
    email: hynduf@gmail.com
    name: API Support
  description: Backend server for VietCard application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: VietCard Backend API
  version: "1.0"
paths:
  /api/card/create:
    post:
      consumes:
      - application/json
      description: Create New Card
      parameters:
      - description: Create Card Request
        in: body
        name: create_card_request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateCardResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create New Card
      tags:
      - card
  /api/login:
    post:
      consumes:
      - multipart/form-data
      description: Login
      parameters:
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Login
      tags:
      - user
  /api/signup:
    post:
      consumes:
      - multipart/form-data
      description: Sign Up
      parameters:
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: name
        required: true
        type: string
      - in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SignupResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Sign Up
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    description: Description for what is this security definition being used
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
